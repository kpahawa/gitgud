#!/bin/bash
# Usage: git gud <commit message>
# This will then git add . all the files in the directory and all sub directories, and then it
# will use your commit message to push it to the current branch.


echo "        _  _                       _                     ";
echo "       (_)| |                     | |                    ";
echo "  __ _  _ | |_    __ _  _   _   __| |   ___   ___   _ __  ";
echo " / _\` || || __|  / _\` || | | | / _\` |  / __| / _ \ | '_ \ ";
echo "| (_| || || |_  | (_| || |_| || (_| |  \__ \| (_) || | | |";
echo " \__, ||_| \__|  \__, | \__,_| \__,_|  |___/ \___/ |_| |_|";
echo "  __/ |           __/ |                                  ";
echo " |___/           |___/                                   ";

echo "";
if [ "$#" -lt 1 ]
then
	echo "No commit msg received. Please ensure a good commit message is given...";
else
	_cmd_msg_received="$@";
	_git_status=$( git status);
	_a=$( git branch);
	_cur_branch=$_a; # Why does this work to produce: "* master" while the _a produces the entire folder structure?;
	
	if grep -q -c "nothing to" <<< $_git_status; then
		echo "No commit/push necessary - your working tree is clean";
		echo "Current branch: ${_cur_branch}";
	else
		echo "Current branch to push to: ${_cur_branch}";
		echo "";
		echo "Doing an add all files in the current sub directories (git add .) and then a commit with a msg given and then a push";
		echo "";
		
		git add .;
		echo "Committing with the following msg received: ${_cmd_msg_received}";
		echo "";
		_cmt_result=$( git commit -m "${_cmd_msg_received}");
		git push;
		echo "*** You got good yet? Done pushing to the current branch ***";
	fi
fi
